/* general 사용법으로 재사용을 통해 얼마나 많은 코드를 효율적으로 절약할 수 있는지 유의하여 복습 */

/***************************/
/* General components */
/***************************/

/***************************/
/* General reusable component */
/***************************/

.container {
  max-width: 120rem;
  /* 대부분 1200px, 1140px임 */
  margin: 0 auto;
  padding: 0 3.2rem;
  /* padding 더하면 페이지가 양쪽 끝에서 공간 좀 남음 */
}

.grid {
  /* reusable grid */
  display: grid;
  gap: 9.6rem;
}

.grid:last-child {
  margin-bottom: 0;
  /* 다수의 grid를 section안에 가지고 있을 때 margin-bottom 있으면 편하다. 근데 모든 grid에 margin-bottom생기면 원하지 않은 whitespace생기므로 last-child psedo element 사용하여 마지막 grid(section 내?)에는 margin 안생기게함 */
}
.grid:not(:last-child) {
  margin-bottom: 9.6rem;
  /* 아니면 not 기능을 사용하여 not last child에만 margin-bottom을 추가하는 방법도 있다. */
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}
.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}
.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.grid-meals {
  height: 1fr;
}

.grid--center-v {
  align-items: center;
}

.heading-primary,
.heading-secondary .heading-tertiary {
  color: #333;
  color: #45260a;
  font-weight: 700;
  letter-spacing: -0.5px;
}
.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;

  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}
.sub-heading {
  display: block;
  /* span은 inline이라 block으로 바꿔줘야 함 */
  font-size: 1.6rem;
  font-weight: 500;
  color: #e67e22;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 1px;
}

.btn,
.btn:link,
.btn:visited {
  /* background-color: #e67e22; */
  font-size: 2rem;
  /* color: #fff; */
  text-decoration: none;
  padding: 1.6rem 3.2rem;
  display: inline-block;
  border-radius: 9px;
  font-weight: 600;

  transition: all 0.3s;
  /* hover시 색 갑자기 변하는게 아니라 시간두고 변하게 함
  all은 의미 잘 모르겠음 */

  /* necessary for btn only */
  border: none;
  cursor: pointer;
  font-family: inherit;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
  /* 버튼사이 gap을 만들고 싶으면 여기서 margin-right하는 방법도 있지만 그건 나중에 버튼 쓸때도 마진만드므로 코드 더러워짐
  
  flexbox랑 grid로 갭 만드는방법도 가능
  
  별도로 class 만들어서 margin-right 하는 방법이 제일 간단함*/
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
  color: #fff;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;
  color: #555;
  /* border: 3px solid #fff; */
  /* border더하면 hover시 border가 생기면서 공간을 더 차지하게됨. 그래서 box외부에 border가 생기는 걸 원하지 않아 border을 inside에 만드려면 box-shadow기능을 사용하면 매우 유용함 */
  box-shadow: inset 0 0 0 3px #fff;
  /* inset하면 shadow안쪽에 생기게 할 수 있다. 아쉽게도 border에는 안쪽에 border만드는 기능 없다. */
}

.btn--form {
  background-color: #45260a;
  color: #fdf2e9;
  align-self: end;
  padding: 1.2rem;
}

.btn--form:hover {
  background-color: #fff;
  color: #555;
}

.link:visited,
.link:link {
  color: #e67e22;
  text-decoration: none;
  border-bottom: 1px solid currentColor;
  /* current color 먹힘 */

  display: inline-block;
  padding-bottom: 2px;
  /* 밑줄border-bottom에 공간 좀 주기위해 padding추가
  근데 그냥은 추가 안되니 inline-block으로 바꿔줘야. 원래는 inline */
}

.link:hover,
.link:active {
  color: #cf711f;
  border-bottom: 1px solid transparent;
  transition: all 0.3s;
  /* border-bottom transparent하는 이유는 border없음으로 하면서 밑줄 없어지면 없어진 공간만큼 link가 차지하는 공간에 변화가 생겨 layout조금 변함. 옛날 원쳐진 page link 만들때랑 같은문제 발생함 */
}

.list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}

.list-icon {
  width: 3rem;
  height: 3rem;
  color: #e67e22;
}

.list-item {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

*:focus {
  outline: none;
  /* outline: 4px dotted #e67e22; */
  /* outline-offset: 8px; */
  /* 이러면 outline이 직사각형으로 생겨 좀 안이쁨
  그래서 box-shadow사용하면 좋음 */

  box-shadow: 0 0 0 0.8rem rgba(230, 125, 34, 0.5);
}
/*focus는 탭 눌렀을때 outline생긴 상태. 아니면 input이나 select 클릭한 다음 outline생긴 상태 등을 말함  
accessiblity issue 있으므로 완전히 없애지는 말고 
다른걸로 바꿔주는걸 추천*/

/* *************************** */
/* Helper classes */
/* ************************** */
strong {
  font-weight: 500;
  /* letter-spacing: ; */
}

.margin-bottom-md {
  margin-bottom: 4.8rem !important;
}

.margin-right-sm {
  margin-right: 1.6rem !important;
  /* helper-class 이므로 재사용 안하는 것이 좋다. */
}

.container-meals {
  text-align: center;
}
